!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	0	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//

symbol_type	pats_symbol.sats	/^abstype symbol_type/;"	kind:abstype
symbol	pats_symbol.sats	/^typedef symbol = symbol_type$/;"	kind:typedef
i0nt	pats_syntax.sats	/^typedef i0nt = token$/;"	kind:typedef
f0loat	pats_syntax.sats	/^typedef f0loat = token$/;"	kind:typedef
token	pats_lexing.sats	/^typedef token = '{$/;"	kind:typedef
location	pats_location.sats	/^typedef location = location_type$/;"	kind:typedef
d2var_type	pats_dynexp2.sats	/^abstype d2var_type$/;"	kind:abstype
d2var	pats_dynexp2.sats	/^typedef d2var = d2var_type$/;"	kind:typedef
d2itm	pats_dynexp2.sats	/^datatype d2itm =$/;"	kind:datatype
d2pitm	pats_dynexp2.sats	/^and d2pitm = D2PITM of (int(*pval*), d2itm)$/;"	kind:datatype
d2itmlst	pats_dynexp2.sats	/^d2itmlst = List (d2itm)$/;"	kind:typedef
d2pitmlst	pats_dynexp2.sats	/^d2pitmlst = List (d2pitm)$/;"	kind:typedef
pckind	pats_dynexp2.sats	/^datatype pckind =$/;"	kind:datatype



d2con_type	pats_staexp2.sats	/^abstype d2con_type$/;"	kind:abstype
d2con	pats_staexp2.sats	/^typedef d2con = d2con_type$/;"	kind:typedef
d2conlst	pats_staexp2.sats	/^typedef d2conlst = List (d2con)$/;"	kind:typedef
c2conlst_vt	pats_staexp2.sats	/^vtypedef d2conlst_vt = List_vt (d2con)$/;"	kind:typedef
dynexp2_hisexp_type	pats_dynexp2.sats	/^abstype dynexp2_hisexp_type$/;"	kind:abstype
hisexp	pats_dynexp2.sats	/^typedef hisexp = dynexp2_hisexp_type$/;"	kind:typedef
hisexpopt	pats_dynexp2.sats	/^typedef hisexpopt = Option (hisexp)$/;"	kind:typedef
hipat	pats_hidynexp.sats	/^hipat = '{$/;"	kind:typedef
hipatlst	pats_hidynexp.sats	/^and hipatlst = List (hipat)$/;"	kind:typedef
hipatopt	pats_hidynexp.sats	/^and hipatopt = Option (hipat)$/;"	kind:typedef
labhipatlst	pats_hidynexp.sats	/^and labhipatlst = List (labhipat)$/;"	kind:typedef
labhipat	pats_hidynexp.sats	/^and labhipat = LABHIPAT of (label, hipat)$/;"	kind:typedef
hipat_node	pats_hidynexp.sats	/^hipat_node =$/;"	kind:datatype
d2varlst	pats_dynexp2.sats	/^typedef d2varlst = List (d2var)$/;"	kind:typedef
d2varopt	pats_dynexp2.sats	/^typedef d2varopt = Option (d2var)$/;"	kind:typedef
location_type	pats_location.sats	/^abstype location_type$/;"	kind:abstype
ccomp_main	pats_ccomp.sats	/^fun ccomp_main$/;"fun_decl
ccomp_main	pats_ccomp_main.dats	/^ccomp_main$/;"	kind:fun_def
do_trans1234	pats_main.dats	/^fun do_trans1234$/;"	kind:fun_decl

do_trans1234	pats_main.dats	/^do_trans1234 ($/;"	kind:func_def
hidecl	pats_hidynexp.sats	/^where hidecl = '{$/;"	kind:typedef
hideclist	pats_hidynexp.sats	/^and hideclist = List (hidecl)$/;"	kind:typedef
hideclopt	pats_hidynexp.sats	/^and hideclopt = Option (hidecl)$/;"	kind:typedef
hideclistopt	pats_hidynexp.sats	/^and hideclistopt = Option (hideclist)$/;"	kind:typedef
hidecl_node	pats_hidynexp.sats	/^hidecl_node =$/;"	kind:datatype
s2aspdec	pats_staexp2.sats	/^s2aspdec = '{$/;"	kind:typedef
s2cst_type	pats_staexp2.sats	/^abstype s2cst_type$/;"	kind:abstype
s2cst	pats_staexp2.sats	/^typedef s2cst = s2cst_type$/;"	kind:typedef
s2cstlst	pats_staexp2.sats	/^typedef s2cstlst = List (s2cst)$/;"	kind:typedef
s2cstopt	pats_staexp2.sats	/^typedef s2cstopt = Option (s2cst)$/;"	kind:typedef
s2cstlst_vt	pats_staexp2.sats	/^vtypedef s2cstlst_vt = List_vt (s2cst)$/;"	kind:typedef
dcstkind	pats_basics.sats	/^dcstkind =$/;"	kind:datatype
d2cst_type	pats_dynexp2.sats	/^abstype d2cst_type$/;"	kind:abstype
d2cst	pats_dynexp2.sats	/^typedef d2cst = d2cst_type$/;"	kind:typedef
d2cstlst	pats_dynexp2.sats	/^typedef d2cstlst = List (d2cst)$/;"	kind:typedef
d2cstopt	pats_dynexp2.sats	/^typedef d2cstopt = Option (d2cst)$/;"	kind:typedef
d2cstlst_vt	pats_dynexp2.sats	/^vtypedef d2cstlst_vt = List_vt (d2cst)$/;"	kind:typedef
d2cstopt_vt	pats_dynexp2.sats	/^vtypedef d2cstopt_vt = Option_vt (d2cst)$/;"	kind:typedef
hiimpdec	pats_hidynexp.sats	/^and hiimpdec = '{$/;"	kind:typedef
s2var_type	pats_staexp2.sats	/^abstype s2var_type$/;"	kind:abstype
s2var	pats_staexp2.sats	/^typedef s2var = s2var_type$/;"	kind:typedef
s2varlst	pats_staexp2.sats	/^typedef s2varlst = List (s2var)$/;"	kind:typedef
s2varlst_vt	pats_staexp2.sats	/^vtypedef s2varlst_vt = List_vt (s2var)$/;"	kind:vtypedef
s2varopt	pats_staexp2.sats	/^typedef s2varopt = Option (s2var)$/;"	kind:typedef
s2varopt_vt	pats_staexp2.sats	/^vtypedef s2varopt_vt = Option_vt (s2var)$/;"	kind:vtypedef
s2varlstlst	pats_staexp2.sats	/^typedef s2varlstlst = List (s2varlst)$/;"	kind:typedef
s2exp	pats_staexp2.sats	/^s2exp = '{$/;"	kind:typedef
s2explst	pats_staexp2.sats	/^and s2explst = List (s2exp)$/;"	kind:typedef
s2expopt	pats_staexp2.sats	/^and s2expopt = Option (s2exp)$/;"	kind:typedef
s2explstlst	pats_staexp2.sats	/^and s2explstlst = List (s2explst)$/;"	kind:typedef
s2explstopt	pats_staexp2.sats	/^and s2explstopt = Option (s2explst)$/;"	kind:typedef
s2lablst	pats_staexp2.sats	/^and s2lablst = List (s2lab)$/;"	kind:typedef
labs2explst	pats_staexp2.sats	/^and labs2explst = List (labs2exp)$/;"	kind:typedef
s2explst_vt	pats_staexp2.sats	/^vtypedef s2explst_vt = List_vt (s2exp)$/;"	kind:vtypedef
s2expopt_vt	pats_staexp2.sats	/^vtypedef s2expopt_vt = Option_vt (s2exp)$/;"	kind:vtypedef
hidexp	pats_hidynexp.sats	/^and hidexp = '{$/;"	kind:typedef
hidexplst	pats_hidynexp.sats	/^and hidexplst = List (hidexp)$/;"	kind:typedef
hidexpopt	pats_hidynexp.sats	/^and hidexpopt = Option (hidexp)$/;"	kind:typedef
cstsp	pats_syntax.sats	/^cstsp = // special constants$/;"	kind:datatype
caskind	pats_basics.sats	/^caskind =$/;"	kind:datatype

hiclaulst	pats_hidynexp.sats	/^and hiclaulst = List (hiclau)$/;"	kind:typedef
hiclau	pats_hidynexp.sats	/^and hiclau = '{$/;"	kind:typedef
higmat	pats_hidynexp.sats	/^and higmat = '{$/;"	kind:typedef
higmatlst	pats_hidynexp.sats	/^and higmatlst = List (higmat)$/;"	kind:typedef
labhidexplst	pats_hidynexp.sats	/^and labhidexplst = List (labhidexp)$/;"	kind:typedef
labhidexp	pats_hidynexp.sats	/^and labhidexp = LABHIDEXP of (label, hidexp)$/;"	kind:typedef

label_type	pats_label.sats	/^abstype label_type$/;"	kind:abstype
label	pats_label.sats	/^typedef label = label_type$/;"	kind:typedef

hilab	pats_hidynexp.sats	/^and hilab = '{$/;"	kind:typedef
hilablst	pats_hidynexp.sats	/^and hilablst = List (hilab)$/;"	kind:typedef
hilab_node	pats_hidynexp.sats	/^and hilab_node =$/;"	kind:datatype
funkind	pats_basics.sats	/^funkind =$/;"	kind:datatype
s2qua	pats_staexp2.sats	/^s2qua = @{$/;"	kind:typedef
s2qualst	pats_staexp2.sats	/^typedef s2qualst = List (s2qua)$/;"	kind:typedef
hifundec	pats_hidynexp.sats	/^and hifundec = '{$/;"	kind:typedef
hifundeclst	pats_hidynexp.sats	/^and hifundeclst = List (hifundec)$/;"	kind:typedef
hidynexp_funlab_type	pats_hidynexp.sats	/^abstype hidynexp_funlab_type // placeholder for [funlab]$/;"	kind:abstype
hidynexp_hidecl_type	pats_hidynexp.sats	/^abstype hidynexp_hidecl_type // placeholder for [hidecl]$/;"	kind:abstype
hidynexp_instrlst_type	pats_hidynexp.sats	/^abstype hidynexp_instrlst_type // placeholder for [instrlst]$/;"	kind:abstype
valkind	pats_basics.sats	/^valkind =$/;"	kind:datatype
hivaldec	pats_hidynexp.sats	/^and hivaldec = '{$/;"	kind:typedef
hivaldeclst	pats_hidynexp.sats	/^and hivaldeclst = List (hivaldec)$/;"	kind:typedef


filename_type	pats_filename.sats	/^abstype filename_type$/;"	kind:abstype
filename	pats_filename.sats	/^filename = filename_type$/;"	kind:typedef
filenameopt_vt	pats_filename.sats	/^filenameopt_vt = Option_vt (filename)$/;"	kind:viewtypedef
filenv_type	pats_staexp2.sats	/^abstype filenv_type$/;"	kind:abstype
filenv	pats_staexp2.sats	/^typedef filenv = filenv_type$/;"	kind:typedef


process_cmdline	pats_main.dats	/^process_cmdline$/;"	kind:fun_def
process_cmdline2	pats_main.dats	/^process_cmdline2$/;"	kind:fun_def
emit_ats_ccomp_header	pats_ccomp.sats	/^fun emit_ats_ccomp_header (out: FILEref): void$/;" kind:fun_decl
emit_ats_ccomp_header	pats_ccomp_main.dats	/^emit_ats_ccomp_header (out) = let$/;" kind:fun_def
emit_text	pats_ccomp.sats	/^fun emit_text$/;"	kind:fun_decl
emit_text	pats_ccomp_emit.dats	/^emit_text$/;"	kind:fun_def
fprint_hideclist	pats_hidynexp.sats	/^fun fprint_hideclist : fprint_type (hideclist)$/;"	kind:fun_decl
fprint_hideclist	pats_hidynexp_print.dats	/^fprint_hideclist$/;"	kind:fun_def

fprint_hidecl	pats_hidynexp.sats	/^fun fprint_hidecl : fprint_type (hidecl)$/;"	kind:fun_decl
fprint_hidecl	pats_hidynexp_print.dats	/^fprint_hidecl$/;"	kind:fun_def
fprint_type	pats_basics.sats	/^fprint_type (a: t@ype) = (FILEref, a) -> void$/;"	kind:typedef






