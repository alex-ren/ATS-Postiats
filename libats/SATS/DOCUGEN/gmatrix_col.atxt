(* ****** ****** *)

%{
implement srcfilename_get () = "../gmatrix_col.sats"
%}

(* ****** ****** *)

%{
val () = patscode_count_reset()
val () = patscode_prefix_set("TRYIT/libats_gmatrix_col")
%}

(* ****** ****** *)

#decltitle("\
ATSLIB/libats/gmatrix_col\
")

(* ****** ****** *)

#declpreamble("\

This package contains various functions for manipulating generic matrices,
that is, two-dimensional arrays of column-major style.

")

(* ****** ****** *)

#declnamesynop("lemma_gmatcol_param")
#declnamesynop("lemma_gmatcol_v_param")

(* ****** ****** *)

#declnamesynop("gmatcol_v_cons0")
#declnamesynop("gmatcol_v_uncons0")
#declnamesynop("gmatcol_v_renil0")

(* ****** ****** *)

#declnamesynop("gmatcol_v_cons1")
#declnamesynop("gmatcol_v_uncons1")
#declnamesynop("gmatcol_v_renil1")

(* ****** ****** *)

#declnamesynop("gmatcol_v_split_2x1")
#declnamesynop("gmatcol_v_unsplit_2x1")

#declnamesynop("gmatcol_v_split1x2")
#declnamesynop("gmatcol_v_unsplit1x2")

#declnamesynop("gmatcol_v_split_2x2")
#declnamesynop("gmatcol_v_unsplit_2x2")

(* ****** ****** *)

#declnamesynop("gmatcol_get_at")
#declnamesynop("gmatcol_set_at")
#declnamesynop("gmatcol_getref_at")
#declnamesynop("gmatcol_getref_row_at")
#declnamesynop("gmatcol_getref_col_at")

(* ****** ****** *)

#declnamesynop("gmatcol_copyto")
#declnamesynop("gmatcol_transpto")

(* ****** ****** *)

#declnamesynop("gmatcol_ptr_split_2x2")

(* ****** ****** *)

#declnamesynop("gmatcol_foreachcol")
#declnamesynop("gmatcol_foreachcol_env")

(* ****** ****** *)

#declnamesynop("gmatcol_foreachcol2")
#declnamesynop("gmatcol_foreachcol2_env")

(* ****** ****** *)

(* end of [gmatrix_col.atxt] *)
