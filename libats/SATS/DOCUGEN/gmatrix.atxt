(* ****** ****** *)

%{
implement srcfilename_get () = "../gmatrix.sats"
%}

(* ****** ****** *)

%{
val () = patscode_count_reset()
val () = patscode_prefix_set("TRYIT/libats_gmatrix")
%}

(* ****** ****** *)

#decltitle("\
ATSLIB/libats/gmatrix\
")

(* ****** ****** *)

#declpreamble("\

This package contains various functions for manipulating generic matrices,
that is, two-dimensional arrays.

")

(* ****** ****** *)

#declnamesynop("mord")
#declnamesynop("MORD")

(* ****** ****** *)

#declnamesynop("transp")
#declnamesynop("TRANSP")
#declnamesynop("transpdim")

(* ****** ****** *)

#declnamesynop("transpdim_transp")

(* ****** ****** *)

#declnamesynop("gmatrix")
#declnamesynop("gmatrix_t0ype")
#declnamesynop("gmatrix_v")
#declnamesynop("GMX")

(* ****** ****** *)

#declnamesynop("lemma_gmatrix_param")
#declnamesynop("lemma_gmatrix_v_param")

(* ****** ****** *)

#declnamesynop("gmatrow")
#declnamesynop("gmatrow_v")
#declnamesynop("GMR")

(* ****** ****** *)

#declnamesynop("gmatcol")
#declnamesynop("gmatcol_v")
#declnamesynop("GMC")

(* ****** ****** *)

#declnamesynop("gmatrix_flipord")
#declnamesynop("gmatrix_v_flipord")

(* ****** ****** *)

#declnamesynop("fprint_gmatrix")
#declnamesynop("fprint_gmatrix$sep1")
#declnamesynop("fprint_gmatrix$sep2")
#declnamesynop("fprint_gmatrix_sep")

(* ****** ****** *)

#declnamesynop("gmatrix_iforeach")
#declnamesynop("gmatrix_iforeach_env")
#declnamesynop("gmatrix_iforeach$fwork")

(* ****** ****** *)

#declnamesynop("gmatrix_imake_arrayptr")
#declnamesynop("gmatrix_imake_matrixptr")
#declnamesynop("gmatrix_imake$fopr")

(* ****** ****** *)

#declnamesynop("trmatrix")
#declnamesynop("trmatrix_t0ype")
#declnamesynop("trmatrix_v")
#declnamesynop("TRMX")

(* ****** ****** *)

#declnamesynop("trmatrix_flipord")
#declnamesynop("trmatrix_v_flipord")

(* ****** ****** *)

(* end of [gmatrix.atxt] *)
