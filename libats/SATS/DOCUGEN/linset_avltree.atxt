(* ****** ****** *)

%{
implement srcfilename_get () = "../linset_avltree.sats"
%}

(* ****** ****** *)

%{
val () = patscode_count_reset()
val () = patscode_prefix_set("TRYIT/libats_linset_avltree")
%}

(* ****** ****** *)

#decltitle("\
ATSLIB/libats/linset_avltree\
")

(* ****** ****** *)

#declpreamble("\

#para("\

This package implements linear sets based on the AVL-tree structure.  Note
that such sets are particularly efficient for supporting search operations.

")

")

(* ****** ****** *)

#declnamesynop("set")
#decldescrpt("\

The type constructor #stacode("set") is a shorthand for
#stacode("set_vtype").  ")

#declnamesynop("set_vtype")
#decldescrpt("\

Given a type T, the abstract viewtype #stacode("set_vtype(T)")
is for a set storing elements of the type T. Note that #stacode("set_vtype")
is co-variant in its type argument.\

")

(* ****** ****** *)

#declnamesynop("compare_elt_elt")
#decldescrpt("This function is for comparing set elements.")

(* ****** ****** *)

#declnamesynop("linset_nil")
#declnamesynop("linset_make_nil")

(* ****** ****** *)

#declnamesynop("linset_sing")
#declnamesynop("linset_make_sing")

(* ****** ****** *)

#declnamesynop("linset_is_nil")
#declnamesynop("linset_isnot_nil")

(* ****** ****** *)

#declnamesynop("linset_is_member")
#declnamesynop("linset_isnot_member")

(* ****** ****** *)

#declnamesynop("linset_copy")
#declnamesynop("linset_free")

(* ****** ****** *)

#declnamesynop("linset_insert")

(* ****** ****** *)

#declnamesynop("linset_takeout")
#declnamesynop("linset_takeout_opt")

(* ****** ****** *)

#declnamesynop("linset_remove")

(* ****** ****** *)

#declnamesynop("linset_takeoutmax")
#declnamesynop("linset_takeoutmax_opt")

(* ****** ****** *)

#declnamesynop("linset_takeoutmin")
#declnamesynop("linset_takeoutmin_opt")

(* ****** ****** *)

#declnamesynop("fprint_linset")
#declnamesynop("fprint_linset$sep")

(* ****** ****** *)

#declnamesynop("linset_foreach")
#declnamesynop("linset_foreach_env")
#declnamesynop("linset_foreach$fwork")

(* ****** ****** *)

#declnamesynop("linset_listize")
#declnamesynop("linset_listize1")

(* ****** ****** *)

#declnamesynop("linset_avltree_height")
#decldescrpt("\

Given a set xs represented by some AVL-tree, this function returns the
height of the tree. ")

(* ****** ****** *)

(* end of [linset_avltree.atxt] *)
