%{
#define ATSCODEFORMAT "txt"
#if (ATSCODEFORMAT == "txt")
#include "utils/atsdoc/HATS/postiatsatxt.hats"
#endif // end of [ATSCCODEFORMAT]
val _thisfilename = atext_strcst"mysql.cats"
val () = theAtextMap_insert_str ("thisfilename", _thisfilename)
fun atscntrb_define (fname: string): atext = (
  atext_strptr (sprintf ("#define atscntrb_%s %s", @(fname, fname)))
) // end of [atscntrb_define]
%}\
\
#atscode_banner_for_C()
#atscode_copyright_LGPL_for_C()

#atscode_separator_for_C()

/*
** Source:
** $PATSHOME/prelude/CATS/CODEGEN/mysql.atxt
** Time of generation: #timestamp()
*/

#atscode_separator_for_C()

/*
#atscode_author("Hongwei Xi")
#atscode_authoremail("hwxi AT cs DOT bu DOT edu")
#atscode_start_time("August, 2012")
*/

#atscode_separator_for_C()

\#ifndef MYSQL_MYSQL_CATS
\#define MYSQL_MYSQL_CATS

#atscode_separator_for_C()

\#include <mysql.h>

#atscode_separator_for_C()

typedef MYSQL MYSQL_struct ;
typedef MYSQL_RES MYSQLRES_struct ;
typedef MYSQL_ROW MYSQLROW_struct ;
typedef MYSQL_FIELD MYSQLFIELD_struct ;

#atscode_separator_for_C()

\#define atscntrb_mysql_init0() mysql_init(NULL)
\#define atscntrb_mysql_init1(conn) mysql_init(conn)

#atscode_separator_for_C()

/*
implement
mysql_init0_exn
  ((*null*)) = let
  val conn = mysql_init0 ()
  val p = MYSQLptr2ptr (conn)
in
//
if p > null then conn else let
//
  prval () = mysql_free_null (conn) // HX: no-op
  val () = prerrln! ("exit(ATS): [mysql_init0] failed.")
  val () = exit_void (1)
//
in
  $UN.castvwtp0{MYSQLptr1}(0)
end // end of [if]
//  
end // end of [mysql_init0_exn]
*/
ATSinline()
atstype_ptr
atscntrb_mysql_init0_exn()
{
  MYSQL *conn ;
  conn = atscntrb_mysql_init0() ;
  if (!conn) {
    fprintf (stderr, "exit(ATS): [mysql_init0] failed.\n") ;
  } // end of [if]
  return conn ;
} // end of [atscntrb_mysql_init0_exn]

#atscode_separator_for_C()

#atscntrb_define("mysql_close")
#atscntrb_define("mysql_real_connect")
#atscntrb_define("mysql_change_user")

#atscode_separator_for_C()

#atscntrb_define("mysql_ping")
#atscntrb_define("mysql_commit")

#atscode_separator_for_C()

#atscntrb_define("mysql_query")
#atscntrb_define("mysql_list_dbs")
#atscntrb_define("mysql_list_fields")

#atscode_separator_for_C()

#atscntrb_define("mysql_field_count")

#atscode_separator_for_C()

#atscntrb_define("mysql_num_rows")
#atscntrb_define("mysql_num_fields")

#atscode_separator_for_C()

#atscntrb_define("mysql_field_tell")
#atscntrb_define("mysql_field_seek")

#atscode_separator_for_C()

#atscntrb_define("mysql_affected_rows")

#atscode_separator_for_C()

#atscntrb_define("mysql_use_result")
#atscntrb_define("mysql_store_result")

#atscode_separator_for_C()

#atscntrb_define("mysql_free_result")

#atscode_separator_for_C()

#atscntrb_define("mysql_data_seek")

#atscode_separator_for_C()

#atscntrb_define("mysql_fetch_row")
#atscntrb_define("mysql_fetch_lengths")

#atscode_separator_for_C()

#atscntrb_define("mysql_fetch_field")
#atscntrb_define("mysql_fetch_field_direct")
#atscntrb_define("mysql_fetch_fields")

#atscode_separator_for_C()

ATSinline()
atstype_ptr
atscntrb_mysqlrow_get_at
  (atstype_ptr row, atstype_int i) { return ((atstype_ptr*)row)[i] ; }
// end of [atscntrb_mysqlrow_get_at]

ATSinline()
atstype_ulint
atscntrb_mysqlrowlen_get_at
  (atstype_ptr rowlen, atstype_int i) { return ((atstype_ulint*)rowlen)[i] ; }
// end of [atscntrb_mysqlrowlen_get_at]

#atscode_separator_for_C()

ATSinline()
atstype_ptr
atscntrb_mysqlfield_get_name
  (atstype_ptr fld) { return ((MYSQLFIELD_struct*)fld)->name ; }
// end of [atscntrb_mysqlfield_get_name]

#atscode_separator_for_C()

\#define atscntrb_mysql_info(conn) ((char*)(mysql_info(conn)))
\#define atscntrb_mysql_stat(conn) ((char*)(mysql_stat(conn)))
\#define atscntrb_mysql_sqlstate(conn) ((char*)(mysql_sqlstate(conn)))

#atscode_separator_for_C()

\#define atscntrb_mysql_get_host_info(conn) ((char*)(mysql_get_host_info(conn)))
#atscntrb_define("mysql_get_proto_info")
\#define atscntrb_mysql_get_client_info() ((char*)(mysql_get_client_info()))
#atscntrb_define("mysql_get_client_version")
\#define atscntrb_mysql_get_server_info(conn) ((char*)(mysql_get_server_info(conn)))
#atscntrb_define("mysql_get_server_version")

#atscode_separator_for_C()

#atscntrb_define("mysql_errno")
\#define atscntrb_mysql_error(x) ((char*)(mysql_error(x)))

#atscode_separator_for_C()

#atscntrb_define("mysql_hex_string")
#atscntrb_define("mysql_escape_string")
#atscntrb_define("mysql_real_escape_string")

#atscode_separator_for_C()

#atscntrb_define("mysql_warning_count")

#atscode_separator_for_C()

\#endif // ifndef MYSQL_MYSQL_CATS

#atscode_separator_for_C()

#atscode_eof_strsub_for_C("\#thisfilename$")\

%{
implement main () = fprint_filsub (stdout_ref, "mysql_atxt.txt")
%}\
